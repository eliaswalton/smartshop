{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Downloads\\\\project\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [lastAddedItemName, setLastAddedItemName] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  useEffect(() => {\n    // Recalculate total price whenever cartItems changes\n    const calculateTotalPrice = () => {\n      const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      setTotalPrice(total);\n    };\n    calculateTotalPrice();\n  }, [cartItems]);\n  const addItemToCart = useCallback(product => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevItems, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n    setLastAddedItemName(product.name);\n    setShowToast(true);\n  }, []);\n  const removeItemFromCart = useCallback(productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  }, []);\n  const updateItemQuantity = useCallback((productId, quantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === productId ? {\n      ...item,\n      quantity: Math.max(0, quantity)\n    } : item).filter(item => item.quantity > 0) // Remove item if quantity is 0\n    );\n  }, []);\n  const clearCart = useCallback(() => {\n    setCartItems([]);\n    // totalPrice will update automatically via useEffect due to cartItems change\n    // setTotalPrice(0); // Explicitly setting totalPrice is also fine, but useEffect handles it\n    setLastAddedItemName(null); // Clear last added item\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      totalPrice,\n      addItemToCart,\n      removeItemFromCart,\n      updateItemQuantity,\n      lastAddedItemName,\n      showToast,\n      setShowToast,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"IjA7GiySWNNhfz9fZ691IGAKKXA=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","totalPrice","setTotalPrice","lastAddedItemName","setLastAddedItemName","showToast","setShowToast","calculateTotalPrice","total","reduce","acc","item","price","quantity","addItemToCart","product","prevItems","existingItem","find","id","map","name","removeItemFromCart","productId","filter","updateItemQuantity","Math","max","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elias/Downloads/project/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [lastAddedItemName, setLastAddedItemName] = useState(null);\r\n  const [showToast, setShowToast] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Recalculate total price whenever cartItems changes\r\n    const calculateTotalPrice = () => {\r\n      const total = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n      setTotalPrice(total);\r\n    };\r\n    calculateTotalPrice();\r\n  }, [cartItems]);\r\n\r\n  const addItemToCart = useCallback((product) => {\r\n    setCartItems(prevItems => {\r\n      const existingItem = prevItems.find(item => item.id === product.id);\r\n      if (existingItem) {\r\n        return prevItems.map(item =>\r\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n        );\r\n      } else {\r\n        return [...prevItems, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n    setLastAddedItemName(product.name);\r\n    setShowToast(true);\r\n  }, []);\r\n\r\n  const removeItemFromCart = useCallback((productId) => {\r\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n  }, []);\r\n\r\n  const updateItemQuantity = useCallback((productId, quantity) => {\r\n    setCartItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === productId ? { ...item, quantity: Math.max(0, quantity) } : item\r\n      ).filter(item => item.quantity > 0) // Remove item if quantity is 0\r\n    );\r\n  }, []);\r\n\r\n  const clearCart = useCallback(() => {\r\n    setCartItems([]);\r\n    // totalPrice will update automatically via useEffect due to cartItems change\r\n    // setTotalPrice(0); // Explicitly setting totalPrice is also fine, but useEffect handles it\r\n    setLastAddedItemName(null); // Clear last added item\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      cartItems,\r\n      totalPrice,\r\n      addItemToCart,\r\n      removeItemFromCart,\r\n      updateItemQuantity,\r\n      lastAddedItemName,\r\n      showToast,\r\n      setShowToast,\r\n      clearCart\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}